/*******************************************************************/
/*    Copyright (c) 1989-2020 by Spatial Corp.                     */
/*    All rights reserved.                                         */
/*    Protected by U.S. Patents 5,257,205; 5,351,196; 6,369,815;   */
/*                              5,982,378; 6,462,738; 6,941,251    */
/*    Protected by European Patents 0503642; 69220263.3            */
/*    Protected by Hong Kong Patent 1008101A                       */
/*******************************************************************/
// 
/*******************************************************************/
#if !defined( API_VOID_VOLUME_HXX )
#define API_VOID_VOLUME_HXX

#include "base.hxx"
#include "dcl_hlc.h"
#include "api.hxx"

class ENTITY_LIST;
class void_volume_options;

/**
* \defgroup HLC High Level Component
* The HLC contains functionality that depends on multiple, lower level components; 
* for instance, Booleans, Cellular Topology, Constructors, Covering, Warping, ...
*/

/**
 * @file api_void_volume.hxx
 * \addtogroup HLC
 * @{
 */

/**
 * Constructs a closed solid body representing a open void region in another body. 
 * <br><br>
 * <b>Role:</b> This API constructs a new solid body that represents an open void region in 
 * another body, given one or more circuits of edges defining the openings into the void region. 
 * <br><br>
 * Each input <tt>ENTITY_LIST</tt> must contain edges forming a closed circuit - an error is
 * issued if the edges do not form a closed circuit. In other words, the edges in the list must 
 * be ordered such that adjacent edges are sequential in the list. 
 * <br><br>
 * <dl>
 * <b>Errors:</b> An entity in a list is not an <tt>EDGE</tt>.
 * <dd>The edges in a list are not topologically connected.</dd>
 * <dd>The edges in a list do not form a closed circuit.</dd>
 * </dl>
 * <b>Limitations:</b> 
 * <ul>
 * <li> This API does not handle bodies that contain wires or sheets. </li>
 * <li> Each circuits of edges must form a closed circuit. </li>
 * <li> Each circuits of edges must be coverable by a surface generated by the Covering algorithm, 
 *      or a covering surface must be provided. </li>
 * <li> The void region must be closed after covering all the specified edge circuits. </li>
 * <li> The resulting void body must be bounded by a single, manifold shell. 
 *      It cannot contain non-manifold edges or vertices.</li>
 * <li> Each of the edges in each of the circuits must be a manifold edge. </li>
 * <li> Each circuits of edges must be in the same shell. </li>
 * </ul>
 * <br><br>
 * <b>Effect:</b> Changes model
 * <br><br>
 * <b>Journal: </b> Available
 * <br><br>
 * <b>Product(s):</b> 3D ACIS Modeler
 * <br><br>
 * @param num_circuits
 * number of circuits to be covered.
 * @param array_circuits
 * array of <tt>ENTITY_LIST</tt> pointers, each list contains a circuit of edges.
 * @param vvo
 * Used to control void volume solution generation.
 * @param ao
 * acis options.
 **/
DECL_HLC outcome api_void_volume(
			int num_circuits,				// number of circuits
			ENTITY_LIST* array_circuits[],	// array of pointers to lists of edges
			BODY*& void_volume_body,		// the returned void volume body
			void_volume_options* vvo = NULL,// object containing optional arguments
			AcisOptions* ao = NULL
	);

/** @} */
#endif
