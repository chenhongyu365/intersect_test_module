/*******************************************************************/
/*    Copyright (c) 1989-2020 by Spatial Corp.                     */
/*    All rights reserved.                                         */
/*    Protected by U.S. Patents 5,257,205; 5,351,196; 6,369,815;   */
/*                              5,982,378; 6,462,738; 6,941,251    */
/*    Protected by European Patents 0503642; 69220263.3            */
/*    Protected by Hong Kong Patent 1008101A                       */
/*******************************************************************/
//                Header for handle based rem api routines.
/*******************************************************************/

#if !defined( LOCAL_REMOVE_APIS_HXX )
#define LOCAL_REMOVE_APIS_HXX

// ------------------------------------------------------------------------------------------------
// Includes:

#include "api.hxx"
#include "dcl_rem.h"
#include "boolean_handles.hxx"

// ------------------------------------------------------------------------------------------------
/**
* @file local_remove_api.hxx
* @CAA2Level L1
* @CAA2Usage U1
* \defgroup REMAPI Remove Faces
*
* \ingroup LOCALOPS
* @{
*/

// Forward decls:

class TVERTEX;
class EDGE;
class local_remove_options;

//=========================== Handle based interfaces ============================

/**
* Represents the handle to the inputs given to Local Remove operation.
* It can be created using local_remove_input_maker and serves as the primary input
* to the API function @href api_local_remove.
*/

class DECL_REM local_remove_input_handle : public acis_handle_base
{
public:
	/**
	* @nodoc
	*/
	MMGR_FREELIST_THIS

	/**
	* Destructor
	*/

	virtual ~local_remove_input_handle() = 0;

protected:

	/**
	* @nodoc
	*/
	// Default constructor. For internal use only!
	local_remove_input_handle();

private:
	/**
	* @nodoc
	*/

	local_remove_input_handle(const local_remove_input_handle&);
	local_remove_input_handle& operator=(const local_remove_input_handle&);
};


/**
* Represents the handle to the output of Local Remove operation as generated by @href api_local_remove. 
* It stores the data generated during the processing of the remove algorithm.
* It can be used for post-processing operations like query of newly created entities.
* For that purpose, an object of @href local_remove_output_query needs to be created.
* The output handle should be released after its usage.
*/

class DECL_REM local_remove_output_handle : public acis_handle_base
{
public:
	/**
	* @nodoc
	*/
	MMGR_FREELIST_THIS

	/**
	* Destructor
	*/
	virtual ~local_remove_output_handle() = 0;

protected:
	/**
	* @nodoc
	*/
	local_remove_output_handle();

private:
	local_remove_output_handle(const local_remove_output_handle&);
	local_remove_output_handle& operator=(const local_remove_output_handle&);
};


/**
* Creation of a local_remove_input_handle which is used further downstream for tvertex removal.
* <br><br>
* <b>Technical Article:</b> <i>[Remove Tvertex](http://doc.spatial.com/articles/r/e/m/Remove_Tvertex_7ada.html)</i>
* <br><br>
* <b>Role:</b> Given a TVERTEX, validation of the input and creation of local_remove_input_handle
* <br><br>
* <b>Errors:</b><br>
* <tt>REM_NON_MANIFOLD</tt> : non-manifold edge or vertex detected<br>
* <tt>REM_FREE_EDGE</tt> : free ( sheet ) edge detected
* <br><br>
* <b>Effect:</b> Read-only
* <br><br>
* <b>Journal:</b> Not available
* <br><br>
* <b>Product:</b> 3D InterOp 
* <br><br>
* @param tvert
* tolerant vertex to be removed or tightened
* @param rih
* handle to the validated input that will be used for local remove operation
*/

class DECL_REM local_remove_input_maker
{
public:
	static outcome for_tvertex( 
						TVERTEX *tvert,
						local_remove_input_handle *& rih
						);
};

/**
* Performs a local remove operation on the input specified. 
* <br><b>Technical Article:</b> <i>[Local Remove Operations](https://doc.spatial.com/get_doc_page/articles/r/e/m/Component~Remove_Faces_05f0.html)</i>
* <br><br>
* <b>Role:</b> This API function performs local remove operation based on the specified input. 
* The API creates and returns a <tt>local_remove_output_handle</tt> that can aid querying newly
* created ENTITYs.
* <br><br>
* <b><i>Note:</i></b> The handle to the local remove output can not be directly consumed.
* To query the newly created entities, an object of @href local_remove_output_query needs to be instantiated.
* The output handle should be released after usage.
* <br><br>
* <b>Errors:</b><br>
* <dd><tt>REM_NO_SOLUTION</tt> "gap cannot be filled"</dd><br>
* <dd><tt>REM_INTERNAL</tt> "internal error"</dd>
* <br><br>
* <b>Limitations:</b> The entity(s) being removed and their neighborhood must be manifold. For tvertex removal,
* the input TVERTEX and the edges connected to it should be manifold.
* <br><br>
* <b>Effect:</b> Modifies the model
* <br><br>
* <b>Journal:</b> Available
* <br><br>
* <b>Product(s):</b> 3D ACIS Modeler
* <br><br>
* @param rih
* (in) Handle to local remove input. Refer to @href local_remove_input_handle for details.
* @param roh
* (out) Handle to the output of local remove operation. Refer to @href local_remove_output_handle for details.
* @param rem_opts
* (in) Local remove options, reserved for future use
* @param ao
* (in) ACIS options such as versioning and journaling. Refer to @href AcisOptions for details.
**/
DECL_REM outcome api_local_remove( 
						local_remove_input_handle * rih,
						local_remove_output_handle *& roh,
						local_remove_options *rem_opts = NULL,
						const AcisOptions * ao = NULL
						);


/** @} */

#endif	//LOCAL_REMOVE_APIS_HXX

